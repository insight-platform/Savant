ARG SAVANT_VERSION
ARG DEEPSTREAM_VERSION

FROM ubuntu:20.04 as savant_build

RUN apt-get update \
    && apt-get install --no-install-recommends -y \
    python3.8 \
    python3-pip \
    python3.8-venv \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
RUN python3 -m pip install --upgrade pip setuptools wheel build

WORKDIR /tmp/build
COPY . .
RUN python3 -m build --wheel


FROM nvcr.io/nvidia/deepstream-l4t:$DEEPSTREAM_VERSION-triton AS base_builder

ARG soc=t194

RUN wget --no-verbose -O /tmp/cmake.sh \
        https://github.com/Kitware/CMake/releases/download/v3.24.2/cmake-3.24.2-linux-aarch64.sh  \
    && sh /tmp/cmake.sh --skip-license --prefix=/usr/local \
    && rm -f /tmp/cmake.sh

RUN echo "deb https://repo.download.nvidia.com/jetson/$soc `cat /etc/apt/sources.list | grep jetson/common | cut -d' ' -f3` main" \
     > /etc/apt/sources.list.d/nvidia-l4t-apt-source.list \
    && rm /etc/ld.so.conf.d/nvidia-tegra.conf \
    && mkdir -p /opt/nvidia/l4t-packages/ \
    && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall \
    && apt-get update \
    && apt-get install -y \
        nvidia-l4t-multimedia \
    && rm -rf /var/lib/apt/lists/*


FROM base_builder AS pygstsavantframemeta_build

WORKDIR /libs/gstsavantframemeta
COPY libs/gstsavantframemeta/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY libs/gstsavantframemeta .
RUN python setup.py bdist_wheel && rm -rf _skbuild


FROM base_builder AS savantboost_build

WORKDIR /libs/savanboost
COPY libs/savantboost/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY libs/savantboost .
RUN python setup.py bdist_wheel && rm -rf _skbuild


FROM nvcr.io/nvidia/deepstream-l4t:$DEEPSTREAM_VERSION-base AS base
ARG SAVANT_VERSION

# install base packages
RUN apt-get update \
    && apt-get install --no-install-recommends -y \
    python3-pip \
    python3-dev \
    libcairo2-dev \
    libgirepository1.0-dev \
    python3-gst-1.0 \
    gstreamer1.0-python3-plugin-loader \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ENV PYTHONUNBUFFERED=1
ARG PROJECT_PATH=/opt/savant
ENV PROJECT_PATH=$PROJECT_PATH
ENV PYTHONPATH=$PROJECT_PATH
WORKDIR $PROJECT_PATH

# add deepstream libs to path, so that ctypes can load them
ENV LD_LIBRARY_PATH=/opt/nvidia/deepstream/deepstream/lib:$LD_LIBRARY_PATH

# install requirements
RUN python -m pip install --no-cache-dir --upgrade pip

COPY requirements/deepstream-l4t.txt requirements.txt
RUN python -m pip install --no-cache-dir -r requirements.txt \
    && rm requirements.txt

COPY --from=savant_build /tmp/build/dist /libs/savant/dist/
RUN python -m pip install --no-cache-dir /libs/savant/dist/*.whl

RUN curl -fsS https://eu-central-1.linodeobjects.com/savant-data/opencv-packages/aarch64/OpenCV-4.6.0-aarch64-{dev,libs,licenses,python,scripts}.deb \
    -o "OpenCV-#1.deb" \
    && dpkg -i OpenCV* \
    && rm OpenCV*

COPY --from=pygstsavantframemeta_build /libs/gstsavantframemeta/dist /libs/gstsavantframemeta/dist
RUN python -m pip install --no-cache-dir /libs/gstsavantframemeta/dist/*.whl

COPY --from=savantboost_build /libs/savanboost/dist /libs/savanboost/dist
RUN python -m pip install --no-cache-dir /libs/savanboost/dist/*.whl

# add framework content
COPY LICENSE .
COPY savant/VERSION .
COPY gst_plugins gst_plugins
ENV GST_PLUGIN_PATH=$PROJECT_PATH/gst_plugins

ENTRYPOINT ["python", "-m", "savant.entrypoint"]


FROM nvcr.io/nvidia/deepstream-l4t:$DEEPSTREAM_VERSION-triton AS mediamtx

ARG MEDIAMTX_VERSION="v0.22.1"
WORKDIR /mediamtx
RUN wget --progress=bar:force:noscroll \
        "https://github.com/aler9/mediamtx/releases/download/${MEDIAMTX_VERSION}/mediamtx_${MEDIAMTX_VERSION}_linux_armv7.tar.gz" \
    && tar -xvzf "mediamtx_${MEDIAMTX_VERSION}_linux_armv7.tar.gz" \
    && rm -f "mediamtx_${MEDIAMTX_VERSION}_linux_armv7.tar.gz"


FROM base AS adapters

COPY --from=mediamtx /mediamtx/mediamtx mediamtx/mediamtx
COPY adapters/ds adapters/ds
COPY adapters/gst/gst_plugins/python/adjust_timestamps.py \
     adapters/gst/gst_plugins/python/fps_meter.py \
     adapters/gst/gst_plugins/python/
ENV GST_PLUGIN_PATH=$GST_PLUGIN_PATH:$PROJECT_PATH/adapters/gst/gst_plugins:$PROJECT_PATH/adapters/ds/gst_plugins

ENTRYPOINT []
