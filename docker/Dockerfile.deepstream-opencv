ARG DEEPSTREAM_VERSION
FROM nvcr.io/nvidia/deepstream:$DEEPSTREAM_VERSION-devel
ARG DEEPSTREAM_VERSION
ARG SAVANT_VERSION

# Newer cmake ver. needed for "FindCUDAToolkit"
RUN mkdir -p /tmp/cmake \
    && cd /tmp/cmake \
    && wget --progress=bar:force:noscroll https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-linux-x86_64.sh \
    && sh cmake-3.23.2-linux-x86_64.sh --skip-license --prefix=/usr/local/

# # need python headers
RUN apt-get update \
    && apt-get install --no-install-recommends -y \
    python3-dev

WORKDIR /opencv
ARG OPENCV_VERSION=4.6.0
RUN git clone --branch "${OPENCV_VERSION}" --depth 1 https://github.com/opencv/opencv
RUN git clone --branch "${OPENCV_VERSION}" --depth 1 https://github.com/opencv/opencv_contrib
WORKDIR /opencv/build

RUN python3 -m pip install --no-cache-dir 'numpy~=1.22.4'

COPY libs/opencv/savant /opencv/opencv_contrib/modules/savant
RUN --mount=type=cache,target=/tmp/opencv-cache \
    cmake \
        -D CMAKE_BUILD_TYPE=RELEASE \
        -D OPENCV_EXTRA_MODULES_PATH=/opencv/opencv_contrib/modules  \
        -D CMAKE_INSTALL_PREFIX=/opencv/dist  \
        -D OPENCV_DOWNLOAD_PATH=/tmp/opencv-cache \
        -D PYTHON_DEFAULT_EXECUTABLE=$(which python3) \
        -D BUILD_LIST=core,cudaarithm,cudabgsegm,cudacodec,cudafeatures2d,cudafilters,cudaimgproc,cudev,features2d,flann,imgcodecs,savant,python3 \
        -D BUILD_opencv_apps=OFF \
        -D BUILD_DOCS=OFF \
        -D BUILD_EXAMPLES=OFF \
        -D BUILD_JAVA=OFF \
        -D BUILD_PERF_TESTS=OFF \
        -D BUILD_SHARED_LIBS=ON \
        -D WITH_CUDA=ON \
        -D WITH_FFMPEG=OFF \
        -D WITH_GSTREAMER=OFF \
        -D BUILD_opencv_python3=ON \
        -D OPENCV_PYTHON_INSTALL_PATH=lib/python3.8/dist-packages \
        -D OPENCV_FORCE_PYTHON_LIBS=ON \
        -D BUILD_PACKAGE=ON \
        -D CPACK_BINARY_DEB=ON \
        -D CPACK_BINARY_STGZ=OFF \
        -D CPACK_BINARY_TGZ=OFF \
        -D CPACK_BINARY_TZ=OFF \
        /opencv/opencv

RUN make -j$(nproc)
RUN make -j$(nproc) install
RUN make -j$(nproc) package \
    && for file in *.deb; do mv "$file" "${file%.deb}_${SAVANT_VERSION}_${DEEPSTREAM_VERSION}.deb"; done

ENTRYPOINT cp OpenCV*.deb /out
