ARG DEEPSTREAM_VERSION
FROM nvcr.io/nvidia/deepstream:$DEEPSTREAM_VERSION-triton-multiarch
ARG TARGETARCH
ARG DEEPSTREAM_VERSION
ARG OPENCV_VERSION=4.8.0
ARG PYTHON_VERSION=3.10

# install cmake
ARG CMAKE_VER=3.27.7
RUN if [ "$TARGETARCH" = "amd64" ]; then \
      wget -nv -O /tmp/cmake.sh https://github.com/Kitware/CMake/releases/download/v$CMAKE_VER/cmake-$CMAKE_VER-linux-x86_64.sh; \
      sh /tmp/cmake.sh --skip-license --prefix=/usr/local; \
      rm -f /tmp/cmake.sh; \
    elif [ "$TARGETARCH" = "arm64" ]; then \
      wget -nv -O /tmp/cmake.sh https://github.com/Kitware/CMake/releases/download/v$CMAKE_VER/cmake-$CMAKE_VER-linux-aarch64.sh; \
      sh /tmp/cmake.sh --skip-license --prefix=/usr/local; \
      rm -f /tmp/cmake.sh; \
      apt-get install -y file; \
    fi

WORKDIR /opencv
RUN git clone --branch "${OPENCV_VERSION}" --depth 1 https://github.com/opencv/opencv
RUN git clone --branch "${OPENCV_VERSION}" --depth 1 https://github.com/opencv/opencv_contrib
WORKDIR /opencv/build

RUN python3 -m pip install --no-cache-dir 'numpy~=1.22.4'

# add ffmpeg/gstreamer libs
RUN /opt/nvidia/deepstream/deepstream/user_additional_install.sh
RUN apt-get install -y \
      libavcodec-dev \
      libavformat-dev \
      libavutil-dev \
      libswscale-dev

COPY libs/opencv/savant /opencv/opencv_contrib/modules/savant
RUN --mount=type=cache,target=/tmp/opencv-cache \
    cmake \
        -D CMAKE_BUILD_TYPE=RELEASE \
        -D OPENCV_EXTRA_MODULES_PATH=/opencv/opencv_contrib/modules  \
        -D CMAKE_INSTALL_PREFIX=/opencv/dist  \
        -D OPENCV_DOWNLOAD_PATH=/tmp/opencv-cache \
        -D PYTHON_DEFAULT_EXECUTABLE=$(which python3) \
        -D BUILD_LIST=core,cudaarithm,cudabgsegm,cudacodec,cudafeatures2d,cudafilters,cudaimgproc,cudev,features2d,flann,calib3d,imgcodecs,savant,python3 \
        -D BUILD_opencv_apps=OFF \
        -D BUILD_DOCS=OFF \
        -D BUILD_EXAMPLES=OFF \
        -D BUILD_JAVA=OFF \
        -D BUILD_PERF_TESTS=OFF \
        -D BUILD_SHARED_LIBS=ON \
        -D WITH_CUDA=ON \
        -D WITH_FFMPEG=ON \
        -D WITH_GSTREAMER=ON \
        -D BUILD_opencv_python3=ON \
        -D OPENCV_PYTHON_INSTALL_PATH=lib/python${PYTHON_VERSION}/dist-packages \
        -D OPENCV_FORCE_PYTHON_LIBS=ON \
        -D BUILD_PACKAGE=ON \
        -D CPACK_BINARY_DEB=ON \
        -D CPACK_BINARY_STGZ=OFF \
        -D CPACK_BINARY_TGZ=OFF \
        -D CPACK_BINARY_TZ=OFF \
        /opencv/opencv

RUN make -j$(nproc)
RUN make -j$(nproc) install
RUN make -j$(nproc) package

RUN tar -czf opencv-${OPENCV_VERSION}-${TARGETARCH}-ds${DEEPSTREAM_VERSION}.tar.gz OpenCV*.deb

ENTRYPOINT cp opencv-*.tar.gz /out
