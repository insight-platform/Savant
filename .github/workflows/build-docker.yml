name: TEST Build and publish docker images

on:
  push:
    tags:
      - 'v*'

  # to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:

  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
    - id: set-matrix
      run: echo "matrix=$(python3 ./scripts/build_docker_matrix.py)" >> $GITHUB_OUTPUT

  build-docker:
#    needs: build-matrix
#    runs-on: ubuntu-latest
    runs-on: self-hosted
    strategy:
      fail-fast: true
        version: [ 10, 12, 14 ]
        os: [ ubuntu-latest, windows-latest ]

    permissions:
      contents: read
      packages: write

    steps:
    - run: |
        echo ${{ matrix.arch }}
        echo ${{ matrix.docker_file }}
        echo ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.docker_image }}

    - uses: actions/checkout@v3

#    - name: Check if tag matches project version
#      run: |
#        PROJECT_VERSION=v$(cat VERSION)
#        TAG=$(git describe HEAD --tags --abbrev=0)
#        echo $TAG
#        echo $PROJECT_VERSION
#        if [[ "$TAG" != "$PROJECT_VERSION" ]]; then exit 1; fi

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

#    - name: Extract metadata (tags, labels) for Docker
#      id: meta
#      uses: docker/metadata-action@v4
#      with:
#        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        file: ${{ matrix.docker_file }}
        tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.docker_image }}
        build-args: |
          DEEPSTREAM_VERSION=${{ matrix.deepstream_version }}
        platforms: ${{ matrix.arch }}
        target: ${{ matrix.target }}
        push: true
