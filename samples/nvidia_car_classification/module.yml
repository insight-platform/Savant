name: ${oc.env:MODULE_NAME, 'nvidia_car_classification'}

parameters:
  output_frame:
    codec: raw-rgba
  draw_func:
    module: samples.nvidia_car_classification.overlay
    # specify the drawfunc's python class from the module
    class_name: Overlay
    rendered_objects:
      Primary_Detector:
        Car:
          bbox:
            border_color: 00FF00FF  # Green
            background_color: '00000000'  # transparent
            thickness: 2
          label:
            font_color: FFFFFFFF  # White
            border_color: '00000000'  # transparent
            background_color: 000000FF  # Black
            font_scale: 0.5
            thickness: 1
            # Note that the label format for Primary_Detector.Car objects
            # is overriden on a per object basis:
            # every car has the classifier result labels added on separate lines
            format: ['{label} #{track_id}']
            position:
              # position options are TopLeftInside / TopLeftOutside / Center
              position: TopLeftInside
              margin_x: 0
              margin_y: 0
        Person:
          bbox:
            border_color: 0000FFFF  # Blue
            thickness: 2

pipeline:
  elements:
    # detector
    - element: nvinfer@detector
      name: Primary_Detector
      model:
        format: caffe
        remote:
          url: s3://savant-data/models/Primary_Detector/Primary_Detector.zip
          checksum_url: s3://savant-data/models/Primary_Detector/Primary_Detector.md5
          parameters:
            endpoint: https://eu-central-1.linodeobjects.com
        model_file: resnet10.caffemodel
        batch_size: 1
        precision: int8
        int8_calib_file: cal_trt.bin
        label_file: labels.txt
        input:
          scale_factor: 0.0039215697906911373
        output:
          num_detected_classes: 4
          layer_names: [conv2d_bbox, conv2d_cov/Sigmoid]
          objects:
            - class_id: 0
              label: Car
            - class_id: 2
              label: Person
    # tracker
    - element: nvtracker
      properties:
        tracker-width: 640
        tracker-height: 384
        ll-lib-file: /opt/nvidia/deepstream/deepstream/lib/libnvds_nvmultiobjecttracker.so
        ll-config-file: ${oc.env:PROJECT_PATH}/samples/nvidia_car_classification/config_tracker_NvDCF_perf.yml
        enable_batch_process: 1
    # Car Color classifier
    - element: nvinfer@classifier
      name: Secondary_CarColor
      model:
        format: caffe
        remote:
          url: s3://savant-data/models/Secondary_CarColor/Secondary_CarColor.zip
          checksum_url: s3://savant-data/models/Secondary_CarColor/Secondary_CarColor.md5
          parameters:
            endpoint: https://eu-central-1.linodeobjects.com
        model_file: resnet18.caffemodel
        mean_file: mean.ppm
        label_file: labels.txt
        precision: int8
        int8_calib_file: cal_trt.bin
        batch_size: 16
        input:
          object: Primary_Detector.Car
          object_min_width: 64
          object_min_height: 64
          color_format: bgr
        output:
          layer_names: [predictions/Softmax]
          attributes:
            - name: car_color
              threshold: 0.51
    # Car Make classifier
    - element: nvinfer@classifier
      name: Secondary_CarMake
      model:
        format: caffe
        remote:
          url: s3://savant-data/models/Secondary_CarMake/Secondary_CarMake.zip
          checksum_url: s3://savant-data/models/Secondary_CarMake/Secondary_CarMake.md5
          parameters:
            endpoint: https://eu-central-1.linodeobjects.com
        model_file: resnet18.caffemodel
        mean_file: mean.ppm
        label_file: labels.txt
        precision: int8
        int8_calib_file: cal_trt.bin
        batch_size: 16
        input:
          object: Primary_Detector.Car
          object_min_width: 64
          object_min_height: 64
          color_format: bgr
        output:
          layer_names: [predictions/Softmax]
          attributes:
            - name: car_make
              threshold: 0.51
    # Car Type classifier
    - element: nvinfer@classifier
      name: Secondary_VehicleTypes
      model:
        format: caffe
        remote:
          url: s3://savant-data/models/Secondary_VehicleTypes/Secondary_VehicleTypes.zip
          checksum_url: s3://savant-data/models/Secondary_VehicleTypes/Secondary_VehicleTypes.md5
          parameters:
            endpoint: https://eu-central-1.linodeobjects.com
        model_file: resnet18.caffemodel
        mean_file: mean.ppm
        label_file: labels.txt
        precision: int8
        int8_calib_file: cal_trt.bin
        batch_size: 16
        input:
          object: Primary_Detector.Car
          object_min_width: 64
          object_min_height: 64
          color_format: bgr
        output:
          layer_names: [predictions/Softmax]
          attributes:
            - name: car_type
              threshold: 0.51
