name: ${oc.env:MODULE_NAME, 'nvidia_car_classification'}

parameters:
  output_frame:
    codec: raw-rgba
  draw_func:
    module: savant.deepstream.drawfunc
    class_name: NvDsDrawFunc

pipeline:
  elements:
    # detector
    - element: nvinfer@detector
      name: DashCamNet
      model:
        format: etlt
        remote:
          url: "https://api.ngc.nvidia.com/v2/models/nvidia/tao/dashcamnet/versions/pruned_v1.0.2/zip"
        model_file: resnet18_dashcamnet_pruned.etlt
        # label_file: labels.txt
        precision: int8
        int8_calib_file: dashcamnet_int8.txt
        batch_size: 1
        input:
          layer_name: input_1
          shape: [3, 544, 960]
          scale_factor: 0.00392156862745098
        output:
          num_detected_classes: 4
          layer_names: [output_cov/Sigmoid, output_bbox/BiasAdd]
          objects:
            - class_id: 0
              label: Car
#            - class_id: 1
#              label: Bicycle
#            - class_id: 2
#              label: Person
#            - class_id: 3
#              label: Roadsign

    # tracker
    - element: nvtracker
      properties:
        tracker-width: 640
        tracker-height: 384
        ll-lib-file: /opt/nvidia/deepstream/deepstream/lib/libnvds_nvmultiobjecttracker.so
        ll-config-file: ${oc.env:APP_PATH}/samples/nvidia_car_classification/config_tracker_NvDCF_perf.yml
        #enable_past_frame: 1
        enable_batch_process: 1
        #display-tracking-id: 0

    # Car Make classifier
    - element: nvinfer@classifier
      name: VehicleMakeNet
      model:
        format: etlt
        remote:
          url: "https://api.ngc.nvidia.com/v2/models/nvidia/tao/vehiclemakenet/versions/pruned_v1.0.1/zip"
        model_file: resnet18_vehiclemakenet_pruned.etlt
        label_file: labels.txt
        precision: int8
        int8_calib_file: vehiclemakenet_int8.txt
        batch_size: 16
        input:
          object: DashCamNet.Car
          layer_name: input_1
          shape: [3, 224, 224]
          offsets: [103.939, 116.779, 123.68]
        output:
          layer_names: [predictions/Softmax]
          converter:
            module: savant.converter.classifier
            class_name: TensorToLabelConverter
          attributes:
            - name: car_make
              labels:
                - acura
                - audi
                - bmw
                - chevrolet
                - chrysler
                - dodge
                - ford
                - gmc
                - honda
                - hyundai
                - infiniti
                - jeep
                - kia
                - lexus
                - mazda
                - mercedes
                - nissan
                - subaru
                - toyota
                - volkswagen

    # Car Type classifier
    - element: nvinfer@classifier
      name: VehicleTypeNet
      model:
        format: etlt
        remote:
          url: "https://api.ngc.nvidia.com/v2/models/nvidia/tao/vehicletypenet/versions/pruned_v1.0.1/zip"
        model_file: resnet18_vehicletypenet_pruned.etlt
        label_file: labels.txt
        precision: int8
        int8_calib_file: vehicletypenet_int8.txt
        batch_size: 16
        input:
          object: DashCamNet.Car
          layer_name: input_1
          shape: [3, 224, 224]
          offsets: [103.939, 116.779, 123.68]
        output:
          layer_names: [predictions/Softmax]
          converter:
            module: savant.converter.classifier
            class_name: TensorToLabelConverter
          attributes:
            - name: car_type
              labels:
                - coupe
                - largevehicle
                - sedan
                - suv
                - truck
                - van
