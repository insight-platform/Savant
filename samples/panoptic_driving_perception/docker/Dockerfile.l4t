ARG PYTORCH_URL=https://nvidia.box.com/shared/static/i8pukc49h3lhak4kkn67tg9j4goqm0m7.whl
ARG PYTORCH_WHL=torch-2.0.0+nv23.05-cp38-cp38-linux_aarch64.whl

FROM nvcr.io/nvidia/deepstream:6.4-triton-multiarch as builder

ARG TORCHVISION_VERSION="v0.15.1"
ARG TORCH_CUDA_ARCH_LIST="5.3;6.2;7.2;8.7"
ARG PYTORCH_URL
ARG PYTORCH_WHL

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
            libopenblas-dev \
            libopenmpi-dev \
            openmpi-bin \
            openmpi-common \
            gfortran \
            libomp-dev \
            libjpeg-dev \
            zlib1g-dev \
            libpython3-dev \
            libavcodec-dev \
            libavformat-dev \
            libswscale-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

RUN cd /opt && \
    wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${PYTORCH_URL} -O ${PYTORCH_WHL} && \
    pip3 install --verbose ${PYTORCH_WHL}

# patch for https://github.com/pytorch/pytorch/issues/45323
RUN PYTHON_ROOT=`pip3 show torch | grep Location: | cut -d' ' -f2` && \
    TORCH_CMAKE_CONFIG=$PYTHON_ROOT/torch/share/cmake/Torch/TorchConfig.cmake && \
    echo "patching _GLIBCXX_USE_CXX11_ABI in ${TORCH_CMAKE_CONFIG}" && \
    sed -i 's/  set(TORCH_CXX_FLAGS "-D_GLIBCXX_USE_CXX11_ABI=")/  set(TORCH_CXX_FLAGS "-D_GLIBCXX_USE_CXX11_ABI=0")/g' ${TORCH_CMAKE_CONFIG}

# PyTorch C++ extensions frequently use ninja parallel builds
RUN pip3 install --no-cache-dir scikit-build && \
    pip3 install --no-cache-dir ninja

RUN cd /opt && \
    git clone --branch ${TORCHVISION_VERSION} --recursive --depth=1 https://github.com/pytorch/vision torchvision && \
    cd torchvision && \
    git checkout ${TORCHVISION_VERSION}

COPY build_torchvision.sh /opt/torchvision

FROM ghcr.io/insight-platform/savant-deepstream-l4t:latest as savant_torch

ARG PYTORCH_URL
ARG PYTORCH_WHL

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
            libopenblas-dev \
            libopenmpi-dev \
            openmpi-bin \
            openmpi-common \
            gfortran \
            libomp-dev \
            libjpeg-dev \
            zlib1g-dev \
            libpython3-dev \
            libavcodec-dev \
            libavformat-dev \
            libswscale-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

COPY --from=builder /opt/${PYTORCH_WHL} /opt

RUN cd /opt && \
    pip3 install --verbose ${PYTORCH_WHL} && \
    rm ${PYTORCH_WHL}

# patch for https://github.com/pytorch/pytorch/issues/45323
RUN PYTHON_ROOT=`pip3 show torch | grep Location: | cut -d' ' -f2` && \
    TORCH_CMAKE_CONFIG=$PYTHON_ROOT/torch/share/cmake/Torch/TorchConfig.cmake && \
    echo "patching _GLIBCXX_USE_CXX11_ABI in ${TORCH_CMAKE_CONFIG}" && \
    sed -i 's/  set(TORCH_CXX_FLAGS "-D_GLIBCXX_USE_CXX11_ABI=")/  set(TORCH_CXX_FLAGS "-D_GLIBCXX_USE_CXX11_ABI=0")/g' ${TORCH_CMAKE_CONFIG}

COPY ./torchvision/torchvision*.whl /opt

RUN pip3 install --no-cache-dir --verbose /opt/torchvision*.whl && rm /opt/torchvision*.whl

ENV TORCH_HOME=/cache/models/torch_hub
RUN export PYTHONPATH=/cache/models/torch_hub:$PYTHONPATH

# install all requirements from repository is leading to reinstall openCV without CUDA support
#RUN pip3 install -r https://raw.githubusercontent.com/hustvl/YOLOP/main/requirements.txt
RUN pip3 install prefetch_generator matplotlib yacs
