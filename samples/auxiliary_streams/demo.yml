# module name, required
name: auxiliary_streams

# base module parameters
parameters:
  # pipeline processing frame parameters
  frame:
    width: 1920
    height: 1080
  batch_size: 1
  # to check encoders used in auxiliary streams
  auxiliary_encoders:
    - ${pipeline.elements[0].kwargs.codec_params}

# pipeline definition
pipeline:
  # source definition is skipped, zeromq source is used by default to connect with source adapters

  # define pipeline's main elements
  elements:
    # pyfunc element to create auxiliary streams and send frames to them
    - element: pyfunc
      # specify the pyfunc's python module
      module: samples.auxiliary_streams.multiple_resolutions
      # specify the pyfunc's python class from the module
      class_name: MultipleResolutions
      # pyfunc's class init keyword arguments
      # will be available as pyfunc object's attributes
      kwargs:
        # list of resolutions to create auxiliary streams
        resolutions:
          # suffix for source ID of the auxiliary stream
          - suffix: '-360p'
            width: 640
            height: 360
          - suffix: '-480p'
            width: 856
            height: 480
          - suffix: '-720p'
            width: 1280
            height: 720
        # codec parameters for auxiliary streams
        codec_params:
          codec: ${oc.env:CODEC, 'h264'}

  # sink definition is skipped, zeromq sink is used by default to connect with sink adapters
