# module name, required
name: ${oc.env:MODULE_NAME, 'demo'}

# base module parameters
parameters:
  # pipeline processing frame parameters
  frame:
    width: 1280
    height: 720
    # Add paddings to the frame before processing
    padding:
      # Paddings are kept on the output frame
      keep: true
      left: 0
      right: 0
      # Padding size is 180px on the top of the frame
      top: 180
      bottom: 0
  output_frame:
    # Frame is output with h264 encoding
    # Video or rtsp sink adapters are expected
    codec: h264
  # PyFunc for drawing on frames
  draw_func:
    # specify the drawfunc's python module
    module: samples.peoplenet_detector.overlay
    # specify the drawfunc's python class from the module
    class_name: Overlay
    # drawfunc's class init keyword arguments
    # will be available as drawfunc object's attributes
    kwargs:
      person_with_face_bbox_color: [0, 1, 0]
      person_no_face_bbox_color: [1, 0, 0]
      person_label_bg_color: [1, 0.9, 0.85]
      person_label_font_color: [0, 0, 0]
      bbox_border_width: 3
      overlay_height: 180
      logo_height: 120
      sprite_heigth: 120
      counters_height: 85
      counters_font_thickness: 5

# pipeline definition
pipeline:
  # source definition is skipped, zeromq source is used by default to connect with source adapters

  # define pipeline's main elements
  elements:
    # primary detector element, inference is provided by the nvinfer Deepstream element
    # model type is detector (other available types are: classifier, custom)
    - element: nvinfer@detector
      # Model's name in the pipeline, mandatory
      name: peoplenet
      # model definition
      model:
        # format of the provided model file
        format: etlt
        # remote storage where the model files can be found
        # skip if providing model files locally
        remote:
          url: s3://savant-data/models/peoplenet/peoplenet_pruned_v2.0.zip
          checksum_url: s3://savant-data/models/peoplenet/peoplenet_pruned_v2.0.md5
          parameters:
            endpoint: https://eu-central-1.linodeobjects.com
          # or get the model directly from NGC API
          # peoplenet v2.0
          # url: "https://api.ngc.nvidia.com/v2/models/nvidia/tao/peoplenet/versions/pruned_v2.0/zip"

        # model file name, without location
        model_file: resnet34_peoplenet_pruned.etlt  # v2.0 Accuracy: 84.3 Size 20.9 MB

        # configuration of input data and custom preprocessing methods
        input:
          # model input layer name
          layer_name: input_1
          # model input layer shape
          shape: [3, 544, 960]
          # pixel scaling/normalization factor
          scale_factor: 0.0039215697906911373

        # configuration of model output
        output:
          # model output layer names
          layer_names: [output_bbox/BiasAdd, output_cov/Sigmoid]
          # number of detected classes for detector model
          num_detected_classes: 3
          # specify which detected objects are included in output
          objects:
            # object class id
            - class_id: 0
              # label assigned to objects of this class id
              label: person
              selector:
                kwargs:
                  # minimal width of the objects of this class to be included in output
                  min_width: 32
                  # minimal height of the objects of this class to be included in output
                  min_height: 32
            - class_id: 2
              label: face
              selector:
                kwargs:
                  # minimal detector confidence of the objects of this class to be included in output
                  confidence_threshold: 0.1

    # nvtracker element from Deepstream, provides tracking
    - element: nvtracker
      properties:
        tracker-width: 640
        tracker-height: 384
        ll-lib-file: /opt/nvidia/deepstream/deepstream/lib/libnvds_nvmultiobjecttracker.so
        # specify tracking config file
        ll-config-file: ${oc.env:APP_PATH}/samples/peoplenet_detector/config_tracker_NvSORT.yml
        enable_batch_process: 1
    
    # analytics element realized in custom pyfunc
    - element: pyfunc
      # specify the pyfunc's python module
      module: samples.peoplenet_detector.analytics
      # specify the pyfunc's python class from the module
      class_name: Analytics
      # pyfunc's class init keyword arguments
      # will be available as pyfunc object's attributes
      kwargs:
        counters_smoothing_period: 0.25

  # sink definition is skipped, zeromq sink is used by default to connect with sink adapters
