# module name, required
name: pass-through-processing-${oc.env:MODULE_STAGE, 'detector'}

# base module parameters
parameters:
  # pipeline processing frame parameters
  frame:
    width: 1280
    height: 720
  output_frame:
    # "copy" codec means the pipeline works in pass-through mode
    codec: ${oc.env:CODEC, 'copy'}
  draw_func: ${json:${oc.env:DRAW_FUNC, null}}
  batch_size: 1
  detected_object:
    id: 0
    label: person
  module_stage: ${oc.env:MODULE_STAGE, 'detector'}

  # We use the default telemetry parameters from `savant/config/default.yml`,
  # which can be configured with environment variables in Docker compose manifests.
  #
  # Optionally, you can override them here.
  # telemetry:
  #   metrics:
  #     # Output stats after every N frames
  #     frame_period: ${oc.decode:${oc.env:METRICS_FRAME_PERIOD, 10000}}
  #     # Output stats after every N seconds
  #     time_period: ${oc.decode:${oc.env:METRICS_TIME_PERIOD, null}}
  #     # How many last stats to keep in the memory
  #     history: ${oc.decode:${oc.env:METRICS_HISTORY, 100}}
  #     # Metrics provider name
  #     provider: ${oc.decode:${oc.env:METRICS_PROVIDER, null}}
  #     # Parameters for metrics provider
  #     provider_params: ${json:${oc.env:METRICS_PROVIDER_PARAMS, null}}

# pipeline definition
pipeline:
  # source definition is skipped, zeromq source is used by default to connect with source adapters

  # define pipeline's main elements
  elements:
    - group:
        # enabled if env var MODULE_STAGE==detector
        init_condition:
          expr: ${parameters.module_stage}
          value: detector
        elements:
          - element: nvinfer@detector
            name: peoplenet
            model:
              format: etlt
              remote:
                url: s3://savant-data/models/peoplenet/peoplenet_pruned_v2.0.zip
                checksum_url: s3://savant-data/models/peoplenet/peoplenet_pruned_v2.0.md5
                parameters:
                  endpoint: https://eu-central-1.linodeobjects.com
              model_file: resnet34_peoplenet_pruned.etlt
              input:
                layer_name: input_1
                shape: [ 3, 544, 960 ]
                scale_factor: 0.0039215697906911373
              output:
                layer_names: [ output_bbox/BiasAdd, output_cov/Sigmoid ]
                num_detected_classes: 3
                objects:
                  - class_id: ${parameters.detected_object.id}
                    label: ${parameters.detected_object.label}


    # tracker
    - group:
        # enabled if env var MODULE_STAGE==tracker
        init_condition:
          expr: ${parameters.module_stage}
          value: tracker
        elements:
          # regular nvtracker definition
          - element: nvtracker
            properties:
              ll-lib-file: /opt/nvidia/deepstream/deepstream/lib/libnvds_nvmultiobjecttracker.so
              ll-config-file: ${oc.env:PROJECT_PATH}/samples/traffic_meter/config_tracker_NvDCF_perf.yml
              tracker-width: 960  # 640  # must be a multiple of 32
              tracker-height: 544  # 384
              display-tracking-id: 0
          # pyfunc metrics example
          - element: pyfunc
            # specify the pyfunc's python module
            module: samples.pass_through_processing.py_func_metrics_example
            # specify the pyfunc's python class from the module
            class_name: PyFuncMetricsExample

  # sink definition is skipped, zeromq sink is used by default to connect with sink adapters
